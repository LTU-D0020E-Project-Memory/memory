{#
/**
 * @file
 * Concentration Game.
 */
#}
<div class="block wrapper col-12 d-flex flex-column justify-content-center concentrate">
  <h3 class=" col-12 text-center">{{ title }}</h3>
  {% if do_render %}
    {% if instruction %}
      <p class="text-center {{ uniqueID }}_ins">{{ instruction }}</p>
    {% endif %}
    <div id="{{ uniqueID }}" class="game mt-3 {{ gridSetup }}">
      {# Grid classes #}
    </div>

    <div class="btn-wrap">
      <form action="{{ link.url }}" class="concentration_form">
        {% if playAgain %}
          <input disabled data-game="#{{ uniqueID }}" type="button" class="btn-disabled reset button btn btn-blue igbgame__button _{{ uniqueID }}_replay mt-3" value="{{ playAgain }}" />
        {% endif %}
        <br />
        {% if link.url %}
          <input type="submit" class="btn-disabled button btn btn-blue igbgame__button _{{ uniqueID }}_button mt-3" disabled value="{{ link.title}}" />
        {% endif %}
      </form>
    </div>
  {% else %}
    <p class="text-center">Insufficient cards to render concentration block, please add more cards.</p>
  {% endif %}
  <br>
  <div id="stats">
    <table id="statsTable">
      <tr>
        <th>Time taken</th>
        <th>Amount of guesses</th>
        <th>Amount of hints</th>
        <th>Board size</th>
      </tr>
      <tr>
        {# Data goes here #}
      </tr>
    </table>

    <div>
      <canvas id="chartTime"></canvas>
    </div>
    <div>
      <canvas id="chartComb"></canvas>
    </div>
  </div>
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <script>
    let hintLimit = "{{hintLimit}}";
    switch ('{{ gridSetup }}') {
      case 'fourbyfour':
        var cardAmount = "4x4";
        break;
      case 'twobytwo':
        var cardAmount = "2x2";
        break;
      default:
        var cardAmount = "3x2";
    }

    let root = document.documentElement;
    root.style.setProperty('--hint-color', "{{hintColor}}");
    root.style.setProperty('--hint-clarity', "{{hintClarity}}");

    var canvasTime = document.getElementById('chartTime');
    var graphTime;
    var canvasComb = document.getElementById('chartComb');
    var graphComb;

    function prepareArray() {
      let arr = localStorage.getItem('game_stats');
      let superArray = arr.split(";");
      superArray.pop();

      let i = 0;
      let labels = [];
      while (i < superArray.length) {
        superArray[i] = superArray[i].split("|");
        labels.push(String(i));
        i++;
      }
      
      return [superArray, labels];
    }

    function populateTable(inArray) {
      var table = document.getElementById("statsTable");
      for(let i = 0; i < (inArray.length); i++) {
        var row = table.insertRow();
        for(let z = 0; z < 4; z++) {
          var td = row.insertCell();
          td.textContent = inArray[i][z];
        }
      }
    }

    function drawStats() {
      const data = prepareArray();
      populateTable(data[0]);
      const timesSeries = []
      data[0].forEach((game) => {
        timesSeries.push(game[0]);
      });

      try {
        graphTime.destroy();
        graphComb.destroy();
      } 
      
      catch {}

      graphTime = new Chart(canvasTime, {
        type: 'line',
        data: {
          labels: data[1],
          datasets: [{
            label: 'Label',
            data: timesSeries,
            borderwidth: 1
          }]
        },
        options: {
          scales: {
            y: {
              beginAtZero: true
            }
          }
        }
      });

      graphComb = new Chart(canvasComb, {
        type: 'line',
        data: {
          labels: ['0', '1', '2', '3', '4'],
          datasets: [
            {
              label: 'Label',
              data: [0, 1, 2, 3, 4, 5],
              borderwidth: 1
            },
            {
              label: 'Label 2',
              data: [0, 1, 2],
              borderwidth: 2
            }
          ]
        },
        options: {
          scales: {
            y: {
              beginAtZero: true
            }
          }
        }
      });
    }
  </script>
</div>